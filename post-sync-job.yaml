apiVersion: batch/v1
kind: Job
metadata:
  name: post-job
  namespace: argocd
  annotations:
    argocd.argoproj.io/hook: PostSync
    # argocd.argoproj.io/hook-delete-policy: HookSucceeded
spec:
  template:
    spec:
      containers:
      - name: slack-notification
        image: alpine:latest
        command: ["/bin/sh", "-c"]
        args:
        - |
            #!/bin/bash
            set -x
            apk update
            apk add curl jq

            REPO="${REPO:?REPO is required}"
            OWNER="${OWNER:?OWNER is required}"
            ENVIRONMENT="${ENVIRONMENT:?ENVIRONMENT is required}"
            REF="${REF:?REF is required}"
            GITHUB_TOKEN="${GITHUB_TOKEN:?GITHUB_TOKEN is required}"
            GITHUB_API_URL="${GITHUB_API_URL:?GITHUB_API_URL is required}"
            
            RESPONSE=$(curl -s -w "%{http_code}" -o /tmp/deploy_response.json -X POST \
                -H "Authorization: token $GITHUB_TOKEN" \
                -H "Accept: application/vnd.github+json" \
                "$GITHUB_API_URL/repos/${OWNER}/${REPO}/deployments" \
                -d "$(jq -n \
                      --arg ref "$REF" \
                      --arg env "$ENVIRONMENT" \
                      '{ref: $ref, environment: $env, auto_merge: false, required_contexts: []}')")
              
            STATUS_CODE=$(tail -n1 <<< "$RESPONSE")
            BODY=$(cat /tmp/deploy_response.json)
            DEPLOYMENT_ID=$(jq -r .id <<< "$BODY")
              
            if [[ "$STATUS_CODE" -ne 201 || "$DEPLOYMENT_ID" == "null" || -z "$DEPLOYMENT_ID" ]]; then
                echo "Failed to create deployment (HTTP $STATUS_CODE)"
                echo "Response: $BODY"
                exit 1
            fi
            
            curl -s -X POST \
              -H "Authorization: token $GITHUB_TOKEN" \
              -H "Accept: application/vnd.github+json" \
              "$GITHUB_API_URL/repos/${OWNER}/${REPO}/deployments/${DEPLOYMENT_ID}/statuses" \
              -d '{"state": "success"}' >/dev/null
                  
        env:
        - name: REPO
          value: "argocd-busybox"
        - name: OWNER
          value: "catmorte"
        - name: ENVIRONMENT
          value: "prod"
        - name: GITHUB_API_URL
          value: "https://api.github.com"
        - name: REF
          value: "0889a674f0678dfa574dbfb9fc253ed5a5bb755e"
        - name: GITHUB_TOKEN
          valueFrom:
            secretKeyRef:
              name: github
              key: token
        - name: ARGOCD_APP_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.labels['argocd.argoproj.io/app-name']
      restartPolicy: Never
  backoffLimit: 2

